.tree-view-resizer {
  position: relative;
  height: 100%;
  overflow: hidden;
  cursor: default;
  -webkit-user-select: none;
  min-width: 212px;
  width: 100%;
  z-index: 2;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  padding: 10px; }
  .tree-view-resizer > .order--start {
    order: -10; }
  .tree-view-resizer > .order--center {
    order: 0; }
  .tree-view-resizer > .order--end {
    order: 10; }
  .tree-view-resizer .tree-view-resize-handle {
    position: absolute;
    top: 0;
    bottom: 0;
    right: -5px;
    width: 10px;
    cursor: col-resize;
    z-index: 3; }
  .tree-view-resizer[data-show-on-right-side='true'] .tree-view-resize-handle {
    left: -5px; }
  .tree-view-resizer[data-show-on-right-side='false'] .tree-view-resize-handle {
    right: -5px; }

.project-root-header {
  -webkit-user-drag: element; }

.tree-view-scroller {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: auto; }

.tree-view {
  flex-grow: 1;
  flex-shrink: 0;
  /*
   * Force a new stacking context to prevent a large, duplicate paint layer from
   * being created for tree-view's scrolling contents that can make the cost of
   * layer tree updates scale at 3x the size of the layer rather than the
   * optimal 1x.
   *
   * On high resolution displays, Chromium handles layers for scrolling content
   * differently and inadvertently creates a duplicate paint layer the size of
   * .tree-view-scroller because descendants of the scroller overlap the
   * auto-created layer.
   */
  isolation: isolate;
  min-width: -webkit-min-content;
  padding-left: 5px;
  padding-right: 10px;
  position: relative;
  /* Drag and Drop */ }
  .tree-view .list-tree li {
    padding-left: 22px;
    margin-top: 5px;
    line-height: 1.5em;
    position: relative; }
    .tree-view .list-tree li .material-icons {
      width: 18px; }
  .tree-view .overlay {
    width: 100%;
    position: absolute;
    left: 0;
    user-select: none;
    z-index: -1; }
    .tree-view .overlay.selected {
      background-color: #ff80ab; }
  .tree-view .header .material-icons {
    vertical-align: middle;
    width: 18px; }
  .tree-view .header .title {
    vertical-align: middle;
    padding-left: 5px;
    font-size: 14px; }
  .tree-view .header .tip {
    color: fade(#000000, 38%);
    padding-left: 5px;
    font-size: 11px;
    vertical-align: middle; }
  .tree-view .root {
    position: static; }
    .tree-view .root > .overlay {
      width: 100%;
      position: absolute;
      left: 0;
      user-select: none;
      line-height: 2em;
      z-index: -1; }
      .tree-view .root > .overlay.selected {
        background-color: #ff80ab; }
    .tree-view .root > .header {
      line-height: 2em; }
      .tree-view .root > .header .title {
        font-weight: 500; }
  .tree-view .placeholder {
    position: absolute;
    left: 5px;
    padding: 0;
    z-index: 999;
    display: inline-block;
    background: #64b5f6;
    list-style: none;
    pointer-events: none; }
    .tree-view .placeholder:before {
      content: "";
      position: absolute;
      height: 2px;
      margin: -1px;
      padding: 0;
      width: inherit;
      background: inherit; }
    .tree-view .placeholder:after {
      content: "";
      position: absolute;
      left: 0;
      margin-top: -2px;
      margin-left: -1px;
      width: 4px;
      height: 4px;
      background: #64b5f6;
      border-radius: 4px;
      border: 1px solid transparent; }
    .tree-view .placeholder:first-child {
      margin-top: 1px; }

.platform-win32 .tree-view-resizer .tree-view-resize-handle {
  cursor: ew-resize; }
